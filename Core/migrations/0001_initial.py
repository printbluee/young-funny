# Generated by Django 3.0 on 2023-05-24 05:43

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='아이디')),
                ('password', models.CharField(max_length=256, verbose_name='비밀번호')),
                ('name', models.CharField(max_length=20, verbose_name='사용자 이름')),
                ('user_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='전화번호')),
                ('is_active', models.BooleanField(default=True, verbose_name='사용가능 여부')),
                ('is_admin', models.BooleanField(default=False, verbose_name='어드민 여부')),
                ('is_staff', models.BooleanField(default=False, verbose_name='스텝여부 여부')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='슈퍼관리자 여부')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='가입 날짜')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='마지막 로그인')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자 리스트',
                'verbose_name_plural': '사용자 리스트',
                'db_table': 'Account',
            },
        ),
    ]
